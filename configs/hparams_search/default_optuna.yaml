# @package _global_

# python train.py -m hparams_search=mnist_optuna experiment=example

defaults:
  - override /hydra/sweeper: optuna
  - override /model: default.yaml
  - override /trainer: gpu

model.net.pooling_type: none

optimized_metric: "val/acc_best"
hydra:
  mode: "MULTIRUN"

  sweeper:
    _target_: hydra_plugins.hydra_optuna_sweeper.optuna_sweeper.OptunaSweeper
    # storage URL to persist optimization results
    # for example, you can use SQLite if you set 'sqlite:///example.db'
    storage: null

    # name of the study to persist optimization results
    study_name: null

    # number of parallel workers
    n_jobs: 1

    # 'minimize' or 'maximize' the objective
    direction: maximize

    # total number of runs that will be executed
    n_trials: 20

    # choose Optuna hyperparameter sampler
    # you can choose bayesian sampler (tpe), random search (without optimization), grid sampler, and others
    # docs: https://optuna.readthedocs.io/en/stable/reference/samplers.html
    sampler:
      _target_: optuna.samplers.TPESampler
      seed: 1234
      n_startup_trials: 10 # number of random sampling runs before optimization starts

    # define hyperparameter search space
    params:
      model.net.hidden_channels: choice(16,32,64)
      model.net.kappa: choice(1,2,3,4,5)
      model.net.hidden_layers: choice(1,2,3,4,5)
      model.net.p_dropout: choice(0.2, 0.3, 0.4, 0.5, 0.6)
      model.weight_decay: interval(0.0001, 1.0)
